<?php
$_productCollection = $this->getLoadedProductCollection();
//Mage::log($_productCollection->getData());
$_helper = $this->helper('catalog/output');
?>
<?php if (!$_productCollection->count()): ?>
    <p class="note-msg"><?php echo $this->__('.') ?></p>
<?php else: ?>
    <script type="text/javascript">decorateList('products-list', 'none-recursive')</script>
    <?php // Grid Mode ?>
    <?php
    $_collectionSize = $_productCollection->count();
    ?>
    <?php $_columnCount = $this->getColumnCount(); ?>
    <ul class="products-grid first<?php echo $_columnCount; ?>"odd>

        <?php $i = 0;
        foreach ($_productCollection as $_product): ?>
            <?php // if ($i++%$_columnCount==4):
            //break;
            ?>
                        <?php //endif  ?>
            <li class="item<?php if (($i - 1) % $_columnCount == 0): ?> first<?php elseif ($i % $_columnCount == 0): ?> last<?php endif; ?>">
                <div class="item-inner">
                    <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" class="product-image">
        <?php //$_imgSize = 210; ?>
                        <img id="product-collection-image-<?php echo $_product->getId(); ?>"
                             src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->resize(298,244); ?>"
                             alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" />
                    </a>
                    <div class="product-info">
                        <h2 class="product-name"><a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($_product->getName(), null, true) ?>"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></a></h2>
                        <div class="price-box">
                            <span class="regular-price"><?php echo  Mage::helper('core')->currency($_product->getFinalPrice(), true, false);?></span>
                            <?php
                        // Provides extra blocks on which to hang some features for products in the list
                        // Features providing UI elements targeting this block will display directly below the product name
                        if ($this->getChild('name.after')) {
                            $_nameAfterChildren = $this->getChild('name.after')->getSortedChildren();
                            foreach ($_nameAfterChildren as $_nameAfterChildName) {
                                $_nameAfterChild = $this->getChild('name.after')->getChild($_nameAfterChildName);
                                $_nameAfterChild->setProduct($_product);
                                echo $_nameAfterChild->toHtml();
                            }
                        }
                        ?>
                        <?php echo $this->getPriceHtml($_product, true) ?>
                            <?php if ($_product->getRatingSummary()): ?>
                                <?php echo $this->getReviewsSummaryHtml($_product, 'short') ?>
                            <?php endif; ?>
          
                    </div>
                </div>
            </li>
        <?php /* if ($i%$_columnCount==0 || $i==$_collectionSize): ?>
          <?php endif */ ?>
    <?php endforeach ?>
    </ul>
    <script type="text/javascript">decorateGeneric($$('ul.products-grid'), ['odd', 'even', 'first', 'last'])</script>
<?php endif; ?>
<?php
// Provides a block where additional page components may be attached, primarily good for in-page JavaScript
if ($this->getChild('after')) {
    $_afterChildren = $this->getChild('after')->getSortedChildren();
    foreach ($_afterChildren as $_afterChildName) {
        $_afterChild = $this->getChild('after')->getChild($_afterChildName);
        //set product collection on after blocks
        $_afterChild->setProductCollection($_productCollection);
        echo $_afterChild->toHtml();
    }
}
?>
